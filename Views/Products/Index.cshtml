@model IEnumerable<Product_Catalog.ViewModels.ActiveProductViewModel>

@{
    ViewData["Title"] = "Index";
}

<div class="col d-flex justify-content-between">
    @if (User.IsInRole(RolesNames.Admin))
    {
        <h1 style="text-align:center">Active Products</h1>
    }
    else
    {
        <h1 style="text-align:center;">Products</h1>
    }
    <div>
        <div class="dropdown pt-2" style="text-align:end">
            <a class="btn btn-secondary dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-bs-toggle="dropdown" aria-expanded="false">
                @{
                    var x = "";
                    if (ViewBag.SelectedCategory != null)
                    {
                        x = @ViewBag.SelectedCategory;

                    }
                    else
                    {
                        x = "Select Category";
                    }

                }
                @x
            </a>

            <ul class="dropdown-menu" aria-labelledby="dropdownMenuLink">
                <li><a class="dropdown-item" asp-action="Index" asp-controller="Products">All Categories</a></li>
                @foreach (CategoryFilter cat in ViewBag.categories)
                {
                    <li><a class="dropdown-item" asp-action="Index" asp-controller="Products" asp-route-CategoryId="@cat.Id">@cat.Name</a></li>
                }
            </ul>
        </div>
    </div>
        
</div>
@if (Model == null || !Model.Any())
{

    <div class="text-center mt-5">
        <h2 style="color:blue; font-family:cursive">No Products are Found !</h2>
    </div>
}

    
else
{
    <table class="table table-striped">
        <thead class="table-dark">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Description)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CategoryName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Price)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
    @foreach (var item in Model) {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CategoryName)
                </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Price) EGP
                    </td>
                <td>
                    <a class="btn btn-success" asp-action="Details" asp-route-id="@item.Id">Details</a>
                </td>
            </tr>
    }
        </tbody>
    </table>
}
