@model IEnumerable<Product_Catalog.ViewModels.ProductsViewModel>

@{
    ViewData["Title"] = "All Products";
}

<h1 style="text-align:center">All Products</h1>


<div class="col d-flex justify-content-between">
    <p>
        <a style="text-align:end" class="btn btn-warning" asp-action="Create">Create New</a>
    </p>
    <div class="dropdown pt-2" style="text-align:end">
        @{
            var x = "";
            if (ViewBag.SelectedCategory != null)
            {
                x = @ViewBag.SelectedCategory;
                
            }
            else
            {
                x = "Select Category";
            }
            
        }
        <a class="btn btn-secondary dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-bs-toggle="dropdown" aria-expanded="false">
            @x
        </a>

        <ul class="dropdown-menu" aria-labelledby="dropdownMenuLink">
            <li><a class="dropdown-item" asp-action="Index" asp-controller="Home">All Categories</a></li>
            @foreach (CategoryFilter cat in ViewBag.categories)
            {
                <li><a class="dropdown-item" asp-action="Index" asp-controller="Home" asp-route-CategoryId="@cat.Id">@cat.Name</a></li>
            }
        </ul>
    </div>
</div>
@if (Model == null || !Model.Any())
{
    
    <div class="text-center mt-5">
        <h2 style="color:blue; font-family:cursive">No Products are Found !</h2>
    </div>
}
else
{
    <table class="table table-sm table-striped table-bordered">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Description)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CreationDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.StartDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DurationInDays)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CreatedByUserId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CategoryId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Price)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
    @foreach (var item in Model) {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreationDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StartDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DurationInDays)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreatedByUserId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CategoryId)
                </td>
                <td style="font-size:smaller">
                    @Html.DisplayFor(modelItem => item.Price) EGP
                </td>
                <td>
                    <div class="btn-group" role="group" aria-label="Basic example">
                        <a class="btn btn-primary" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                        <a class="btn btn-secondary" asp-action="Details" asp-route-id="@item.Id">Details</a>
                        <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    </div>
                    
                </td>
            </tr>
    }
        </tbody>
    </table>
}
